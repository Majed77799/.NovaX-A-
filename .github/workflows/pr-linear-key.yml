name: Require Linear Key

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: read
  statuses: write

jobs:
  linear-key:
    # Only enforce when repository variable LINEAR_CONNECTED == 'true'
    if: ${{ vars.LINEAR_CONNECTED == 'true' }}
    name: Require Linear Key
    runs-on: ubuntu-latest
    env:
      DEFAULT_PATTERN: '[A-Z]{2,}-[0-9]+'
    steps:
      - name: Validate Linear key in PR title and branch name
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request || {};
            const title = (pr.title || '').trim();
            const branch = (pr.head && pr.head.ref ? pr.head.ref : '').trim();
            const sha = (pr.head && pr.head.sha) ? pr.head.sha : context.sha;
            const targetUrl = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const patternSource = process.env.LINEAR_KEY_PATTERN || process.env.DEFAULT_PATTERN;
            const rx = new RegExp(patternSource, 'i');

            const titleMatch = title.match(rx);
            const branchMatch = branch.match(rx);

            const problems = [];
            if (!titleMatch) {
              problems.push('PR title must include a Linear issue key (e.g., ABC-123).');
            }
            if (!branchMatch) {
              problems.push(`Branch name "${branch}" must include a Linear issue key (e.g., ABC-123).`);
            }
            if (titleMatch && branchMatch && titleMatch[0].toUpperCase() !== branchMatch[0].toUpperCase()) {
              problems.push(`Title issue key (${titleMatch[0]}) does not match branch issue key (${branchMatch[0]}).`);
            }

            if (problems.length > 0) {
              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha,
                state: 'failure',
                context: 'Require Linear Key',
                description: problems[0].slice(0, 140),
                target_url: targetUrl,
              });
              core.setFailed(problems.join('\n'));
              return;
            }

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state: 'success',
              context: 'Require Linear Key',
              description: 'Linear issue key found in title and branch',
              target_url: targetUrl,
            });
            core.info('Linear issue key found and consistent in title and branch.');

